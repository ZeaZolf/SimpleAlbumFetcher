import * as crypto from 'crypto';
/**
 * @see https://www.discogs.com/developers/#page:authentication,header:authentication-oauth-flow
 */
export declare class DiscogsOAuth {
    private consumerKey;
    private consumerSecret;
    /**
     * @param {string} consumerKey - The Discogs consumer key
     * @param {string} consumerSecret - The Discogs consumer secret
     */
    constructor(consumerKey: string, consumerSecret: string);
    /**
     * Get an OAuth request token from Discogs
     */
    getRequestToken(callbackUrl: string): Promise<{
        token: string | null;
        tokenSecret: string | null;
        callbackConfirmed: boolean;
        authorizeUrl: string;
    }>;
    /**
     * Get an OAuth access token from Discogs
     * @param {string} token
     * @param {string} tokenSecret
     * @param {string} verifier - The OAuth 1.0a verification code returned by Discogs
     */
    getAccessToken(token: string, tokenSecret: string, verifier: string): Promise<{
        accessToken: string | null;
        accessTokenSecret: string | null;
    }>;
}
export declare function toAuthHeader(consumerKey: string, consumerSecret: string, accessToken: string, accessTokenSecret: string, clock: {
    now: () => number;
}, _crypto: typeof crypto): string;
